{"ast":null,"code":"var _jsxFileName = \"C:\\\\boot_work_space\\\\Cinema_Team_Project_0.0.1\\\\src\\\\main\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport customAxios from './customAxios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // IP주소 변수 선언\n  const [ip, setIp] = useState('');\n\n  // IP주소 값을 설정합니다.\n  function callback(data) {\n    setIp(data);\n  }\n\n  // 첫번째 렌더링을 다 마친 후 실행합니다.\n  useEffect(() => {\n    // 클라이언트의 IP주소를 알아내는 백엔드의 함수를 호출합니다.\n    // customAxios('/ip', callback);\n    axios.get('/api/hello').then(response => setHello(response.data)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [\"\\uC774 \\uAE30\\uAE30\\uC758 IP\\uC8FC\\uC18C\\uB294 \", ip, \"\\uC785\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YpZ3SWQQmQ1wVzKrzfcDLp5BP+o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","customAxios","jsxDEV","_jsxDEV","App","_s","ip","setIp","callback","data","axios","get","then","response","setHello","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/boot_work_space/Cinema_Team_Project_0.0.1/src/main/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport customAxios from './customAxios';\n\nfunction App() {\n  // IP주소 변수 선언\n  const [ip, setIp] = useState('');\n\n  // IP주소 값을 설정합니다.\n  function callback(data) {\n    setIp(data);\n  }\n\n  // 첫번째 렌더링을 다 마친 후 실행합니다.\n  useEffect(\n    () => {\n      // 클라이언트의 IP주소를 알아내는 백엔드의 함수를 호출합니다.\n      // customAxios('/ip', callback);\n      axios.get('/api/hello')\n        .then(response => setHello(response.data))\n        .catch(error => console.log(error));\n    }, []\n  );\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        이 기기의 IP주소는 {ip}입니다.\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEhC;EACA,SAASS,QAAQA,CAACC,IAAI,EAAE;IACtBF,KAAK,CAACE,IAAI,CAAC;EACb;;EAEA;EACAT,SAAS,CACP,MAAM;IACJ;IACA;IACAU,KAAK,CAACC,GAAG,CAAC,YAAY,CAAC,CACpBC,IAAI,CAACC,QAAQ,IAAIC,QAAQ,CAACD,QAAQ,CAACJ,IAAI,CAAC,CAAC,CACzCM,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EACL,CAAC;EAGD,oBACEb,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjB,OAAA;MAAQgB,SAAS,EAAC,YAAY;MAAAC,QAAA,GAAC,iDACjB,EAACd,EAAE,EAAC,qBAClB;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnB,EAAA,CA5BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}